CREATE SCHEMA IF NOT EXISTS bl_dm;

--DROP TABLE bl_dm.dim_date

-- ---------- Date Dimension ----------
CREATE TABLE IF NOT EXISTS bl_dm.dim_date (
  date_key      INTEGER PRIMARY KEY,       -- yyyymmdd
  full_date     DATE,
  year_num      INT,
  quarter_num   INT,
  month_num     INT,
  month_name    VARCHAR(12),
  day_of_month  INT,
  day_of_week   INT,                        -- ISO: 1=Mon..7=Sun
  day_name      VARCHAR(9),
  is_weekend    BOOLEAN
);

INSERT INTO bl_dm.dim_date (
  date_key, full_date, year_num, quarter_num, month_num, month_name,
  day_of_month, day_of_week, day_name, is_weekend
)
SELECT -1, NULL, NULL, NULL, NULL, 'N/A', NULL, NULL, 'N/A', NULL
WHERE NOT EXISTS (SELECT 1 FROM bl_dm.dim_date WHERE date_key = -1);


-- ---------- Customer Dimension (SCD2-ready) ----------
CREATE TABLE IF NOT EXISTS bl_dm.dim_customer (
  customer_key     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  customer_src_id  BIGINT NOT NULL,                -- BK from 3NF
  first_name       VARCHAR(100) NOT NULL DEFAULT 'N/A',
  last_name        VARCHAR(100) NOT NULL DEFAULT 'N/A',
  full_name        VARCHAR(205) NOT NULL DEFAULT 'N/A',
  start_date_key   INTEGER NOT NULL,               -- FK to dim_date (yyyymmdd)
  end_date_key     INTEGER NOT NULL,               -- FK to dim_date (yyyymmdd)
  is_current       BOOLEAN NOT NULL,
  CONSTRAINT uq_dim_customer_ver UNIQUE (customer_src_id, start_date_key)
);

INSERT INTO bl_dm.dim_customer (customer_key, customer_src_id, first_name, last_name, full_name,
                                start_date_key, end_date_key, is_current)
SELECT -1, -1, 'N/A', 'N/A', 'N/A', -1, -1, FALSE
WHERE NOT EXISTS (SELECT 1 FROM bl_dm.dim_customer WHERE customer_key = -1);


-- ---------- Product Dimension ----------
CREATE TABLE IF NOT EXISTS bl_dm.dim_product (
  product_key       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  product_src_id    BIGINT NOT NULL,              -- from 3NF ce_product.product_src_id
  product_name      VARCHAR(255) NOT NULL DEFAULT 'N/A',
  category_src_id   BIGINT,                       -- from 3NF ce_category.category_src_id
  category_name     VARCHAR(150) NOT NULL DEFAULT 'N/A',
  source_system     VARCHAR(50)  NOT NULL,
  source_entity     VARCHAR(50)  NOT NULL,
  CONSTRAINT uq_dim_product_src UNIQUE (source_system, source_entity, product_src_id)
);

INSERT INTO bl_dm.dim_product (product_key, product_src_id, product_name, category_src_id, category_name, source_system, source_entity)
SELECT -1, -1, 'N/A', -1, 'N/A', 'MANUAL', 'MANUAL'
WHERE NOT EXISTS (SELECT 1 FROM bl_dm.dim_product WHERE product_key = -1);


-- ---------- Retailer Dimension ----------
CREATE TABLE IF NOT EXISTS bl_dm.dim_retailer (
  retailer_key     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  retailer_src_id  VARCHAR(255) NOT NULL,         -- name-as-id from 3NF
  retailer_name    VARCHAR(255) NOT NULL DEFAULT 'N/A',
  source_system    VARCHAR(50)  NOT NULL,
  source_entity    VARCHAR(50)  NOT NULL,
  CONSTRAINT uq_dim_retailer_src UNIQUE (source_system, source_entity, retailer_src_id)
);

INSERT INTO bl_dm.dim_retailer (retailer_key, retailer_src_id, retailer_name, source_system, source_entity)
SELECT -1, 'N/A', 'N/A', 'MANUAL', 'MANUAL'
WHERE NOT EXISTS (SELECT 1 FROM bl_dm.dim_retailer WHERE retailer_key = -1);


-- ---------- Geography Dimension (flatten city/state/region) ----------
CREATE TABLE IF NOT EXISTS bl_dm.dim_geography (
  geography_key   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  city_id         BIGINT,
  city_name       VARCHAR(150) NOT NULL DEFAULT 'N/A',
  state_id        BIGINT,
  state_name      VARCHAR(100) NOT NULL DEFAULT 'N/A',
  region_id       BIGINT,
  region_name     VARCHAR(100) NOT NULL DEFAULT 'N/A'
);

INSERT INTO bl_dm.dim_geography (geography_key, city_id, city_name, state_id, state_name, region_id, region_name)
SELECT -1, -1, 'N/A', -1, 'N/A', -1, 'N/A'
WHERE NOT EXISTS (SELECT 1 FROM bl_dm.dim_geography WHERE geography_key = -1);


-- ---------- Sales Method Dimension ----------
CREATE TABLE IF NOT EXISTS bl_dm.dim_sales_method (
  sales_method_key     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  sales_method_src_id  INT NOT NULL,
  sales_method_name    VARCHAR(100) NOT NULL DEFAULT 'N/A',
  source_system        VARCHAR(50)  NOT NULL,
  source_entity        VARCHAR(50)  NOT NULL,
  CONSTRAINT uq_dim_sales_method_src UNIQUE (source_system, source_entity, sales_method_src_id)
);

INSERT INTO bl_dm.dim_sales_method (sales_method_key, sales_method_src_id, sales_method_name, source_system, source_entity)
SELECT -1, -1, 'N/A', 'MANUAL', 'MANUAL'
WHERE NOT EXISTS (SELECT 1 FROM bl_dm.dim_sales_method WHERE sales_method_key = -1);


-- ---------- Payment Method Dimension ----------
CREATE TABLE IF NOT EXISTS bl_dm.dim_payment_method (
  payment_method_key     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  payment_method_src_id  INT NOT NULL,
  payment_method_name    VARCHAR(100) NOT NULL DEFAULT 'N/A',
  source_system          VARCHAR(50)  NOT NULL,
  source_entity          VARCHAR(50)  NOT NULL,
  CONSTRAINT uq_dim_payment_method_src UNIQUE (source_system, source_entity, payment_method_src_id)
);

INSERT INTO bl_dm.dim_payment_method (payment_method_key, payment_method_src_id, payment_method_name, source_system, source_entity)
SELECT -1, -1, 'N/A', 'MANUAL', 'MANUAL'
WHERE NOT EXISTS (SELECT 1 FROM bl_dm.dim_payment_method WHERE payment_method_key = -1);


-- ---------- Fact Sales (shell only; no load in Task 6) ----------
CREATE TABLE IF NOT EXISTS bl_dm.fact_sales (
  sales_key          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  date_key           INTEGER    NOT NULL REFERENCES bl_dm.dim_date(date_key),
  customer_key       BIGINT     NOT NULL REFERENCES bl_dm.dim_customer(customer_key),
  product_key        BIGINT     NOT NULL REFERENCES bl_dm.dim_product(product_key),
  retailer_key       BIGINT     NOT NULL REFERENCES bl_dm.dim_retailer(retailer_key),
  geography_key      BIGINT     NOT NULL REFERENCES bl_dm.dim_geography(geography_key),
  sales_method_key   BIGINT     NOT NULL REFERENCES bl_dm.dim_sales_method(sales_method_key),
  payment_method_key BIGINT     NOT NULL REFERENCES bl_dm.dim_payment_method(payment_method_key),

  units_sold         INT,
  price_per_unit     NUMERIC(12,2),
  total_sales        NUMERIC(14,2),
  operating_profit   NUMERIC(14,2),
  operating_margin   NUMERIC(7,4),
  avg_unit_price     NUMERIC(12,4),
  profit_per_unit    NUMERIC(12,4),
  is_high_margin     BOOLEAN,

  sale_src_id        VARCHAR(100) NOT NULL,       -- lineage
  source_system      VARCHAR(50)  NOT NULL,
  source_entity      VARCHAR(50)  NOT NULL,

  CONSTRAINT uq_fact_sales_nk UNIQUE (
    date_key, customer_key, product_key, retailer_key, geography_key,
    sales_method_key, payment_method_key,
    units_sold, price_per_unit, total_sales,
    sale_src_id, source_system, source_entity
  )
);


SELECT * FROM bl_dm.fact_sales